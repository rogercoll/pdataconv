package metadata

import (
	"go.opentelemetry.io/collector/confmap"
)

// DO NOT MODIFY: This code is autogenerated.
// See templates/registry/metadata/resource_config.go.j2.

// ResourceAttributeConfig provides common config for a particular resource attribute.
type ResourceAttributeConfig struct {
	Enabled bool `mapstructure:"enabled"`

	enabledSetByUser bool
}

func (rac *ResourceAttributeConfig) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(rac)
	if err != nil {
		return err
	}
	rac.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// ResourceAttributesConfig provides config for resource attributes.
type ResourceAttributesConfig struct {
	ContainerRuntime ResourceAttributeConfig `mapstructure:"container.runtime"`

	ContainerId ResourceAttributeConfig `mapstructure:"container.id"`

	ContainerCommandLine ResourceAttributeConfig `mapstructure:"container.command_line"`
}

func DefaultResourceAttributesConfig() ResourceAttributesConfig {
	return ResourceAttributesConfig{

		ContainerRuntime: ResourceAttributeConfig{
			Enabled: true,
		},

		ContainerId: ResourceAttributeConfig{
			Enabled: true,
		},

		ContainerCommandLine: ResourceAttributeConfig{
			Enabled: false,
		},
	}
}
