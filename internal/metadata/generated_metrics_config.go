package metadata

import (
	"go.opentelemetry.io/collector/confmap"
)

// DO NOT MODIFY: This code is autogenerated.
// See templates/registry/go/metric_config.go.j2.

// MetricConfig provides common config for a particular metric.
type MetricConfig struct {
	Enabled bool `mapstructure:"enabled"`

	enabledSetByUser bool
}

func (ms *MetricConfig) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(ms)
	if err != nil {
		return err
	}
	ms.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// MetricsConfig provides config for metrics.
type MetricsConfig struct {
	ContainerCpuUsage MetricConfig `mapstructure:"container.cpu.usage"`

	ContainerMemoryUsage MetricConfig `mapstructure:"container.memory.usage"`
}

func DefaultMetricsConfig() MetricsConfig {
	return MetricsConfig{

		ContainerCpuUsage: MetricConfig{

			Enabled: false,
		},

		ContainerMemoryUsage: MetricConfig{

			Enabled: false,
		},
	}
}
